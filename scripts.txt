The mapper and reducer scripts for the MapReduce job

#The mapper.

cat << 'EOF' > mapper.py
#!/usr/bin/env python3
import sys

for line in sys.stdin:
    line = line.strip()
    if not line or line.startswith("Student_ID,"):
        continue
    parts = line.split(",")
    # Make sure we have enough columns
    if len(parts) < 6:
        continue
    country = parts[4]
    try:
        hours = float(parts[5])
        print(f"{country}\t{hours}\t1")
    except ValueError:
        continue
    # Output format: country \t hours \t 1
    print(f"{country}\t{hours}\t1")
EOF

# The reducer.

cat << 'EOF' > reducer.py
#!/usr/bin/env python3
import sys

current_country = None
total_hours     = 0.0
total_count     = 0

def flush():
    if current_country is not None and total_count > 0:
        avg = total_hours / total_count
        print(f"{current_country}\t{avg:.2f}")

for line in sys.stdin:
    line = line.strip()
    if not line:
        continue
    country, hours, cnt = line.split("\t")
    hours = float(hours)
    cnt   = int(cnt)

    if country == current_country:
        total_hours += hours
        total_count += cnt
    else:
        flush()
        current_country = country
        total_hours     = hours
        total_count     = cnt

flush()
EOF

